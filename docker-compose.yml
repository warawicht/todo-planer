version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: todo-planner-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: todo_planner_user
      POSTGRES_PASSWORD: todo_planner_password
      POSTGRES_DB: todo_planner_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_planner_user -d todo_planner_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: todo-planner-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-planner-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=todo_planner_user
      - DATABASE_PASSWORD=todo_planner_password
      - DATABASE_NAME=todo_planner_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Migration service to run database migrations
  migration:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-planner-migration
    restart: "no"
    command: npm run typeorm migration:run
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=todo_planner_user
      - DATABASE_PASSWORD=todo_planner_password
      - DATABASE_NAME=todo_planner_dev
    depends_on:
      postgres:
        condition: service_healthy

  # Testing service
  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-planner-test
    restart: "no"
    command: npm run test
    environment:
      - NODE_ENV=test
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=todo_planner_user
      - DATABASE_PASSWORD=todo_planner_password
      - DATABASE_NAME=todo_planner_test
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: